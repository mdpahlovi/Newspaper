/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as _indexRouteImport } from './routes/__index'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as _indexIndexRouteImport } from './routes/__index/index'
import { Route as _indexAnalyticsRouteImport } from './routes/__index/analytics'

const _indexRoute = _indexRouteImport.update({
  id: '/__index',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const _indexIndexRoute = _indexIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => _indexRoute,
} as any)
const _indexAnalyticsRoute = _indexAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => _indexRoute,
} as any)

export interface FileRoutesByFullPath {
  '/signin': typeof SigninRoute
  '/analytics': typeof _indexAnalyticsRoute
  '/': typeof _indexIndexRoute
}
export interface FileRoutesByTo {
  '/signin': typeof SigninRoute
  '/analytics': typeof _indexAnalyticsRoute
  '/': typeof _indexIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/__index': typeof _indexRouteWithChildren
  '/signin': typeof SigninRoute
  '/__index/analytics': typeof _indexAnalyticsRoute
  '/__index/': typeof _indexIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/signin' | '/analytics' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/signin' | '/analytics' | '/'
  id: '__root__' | '/__index' | '/signin' | '/__index/analytics' | '/__index/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  _indexRoute: typeof _indexRouteWithChildren
  SigninRoute: typeof SigninRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__index': {
      id: '/__index'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _indexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__index/': {
      id: '/__index/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof _indexIndexRouteImport
      parentRoute: typeof _indexRoute
    }
    '/__index/analytics': {
      id: '/__index/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof _indexAnalyticsRouteImport
      parentRoute: typeof _indexRoute
    }
  }
}

interface _indexRouteChildren {
  _indexAnalyticsRoute: typeof _indexAnalyticsRoute
  _indexIndexRoute: typeof _indexIndexRoute
}

const _indexRouteChildren: _indexRouteChildren = {
  _indexAnalyticsRoute: _indexAnalyticsRoute,
  _indexIndexRoute: _indexIndexRoute,
}

const _indexRouteWithChildren =
  _indexRoute._addFileChildren(_indexRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  _indexRoute: _indexRouteWithChildren,
  SigninRoute: SigninRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
